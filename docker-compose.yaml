version: "3.9"

services:
  post_service_backend:
    build:
      context: post_service/.
      dockerfile: ci/Dockerfile
    restart: on-failure
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      POSTGRES_URL: 'postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
    volumes:
      - ./post_service/src:/src/app

  user_service_backend:
    build:
      context: user_service/.
      dockerfile: ci/Dockerfile
    restart: on-failure
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      POSTGRES_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
      POSTGRES_TEST_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/test_db'
    volumes:
      - ./user_service/src:/src/app

  api_gateway_backend:
    build:
      context: api_gateway/.
      dockerfile: ci/Dockerfile
    ports:
      - "8000:8000"
    restart: on-failure
    depends_on:
      - post_service_backend
      - user_service_backend
    environment:
      USER_BACKEND_SERVICE: 'http://user_service_backend:8001/api/v1/'
      TASK_BACKEND_SERVICE: 'http://post_service_backend:8002/api/v1/'
    volumes:
      - ./api_gateway/src:/src/app

  postgres:
    image: postgres:14.5
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5435:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", ]
      interval: 5s
      timeout: 5s
      retries: 8
    volumes:
      - postgres-volume:/var/lib/postgresql/data

  redis:
    image: redis:6.2.8-alpine
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 3s
      timeout: 5s
      retries: 4
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'

    volumes:
      - cache:/data

volumes:
  postgres-volume: {}
  cache: {}